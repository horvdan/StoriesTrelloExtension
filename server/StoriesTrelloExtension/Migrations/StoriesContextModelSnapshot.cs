// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoriesTrelloExtension.Data;

namespace StoriesTrelloExtension.Migrations
{
    [DbContext(typeof(StoriesContext))]
    partial class StoriesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StoriesTrelloExtension.Data.Models.Epic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Epics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Epic 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Epic 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Epic 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Epic 4"
                        });
                });

            modelBuilder.Entity("StoriesTrelloExtension.Data.Models.Release", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Releases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Release 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Release 2"
                        });
                });

            modelBuilder.Entity("StoriesTrelloExtension.Data.Models.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EpicId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("EpicId");

                    b.ToTable("Steps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EpicId = 1,
                            Name = "Step 1"
                        },
                        new
                        {
                            Id = 2,
                            EpicId = 1,
                            Name = "Step 2"
                        },
                        new
                        {
                            Id = 3,
                            EpicId = 1,
                            Name = "Step 3"
                        },
                        new
                        {
                            Id = 4,
                            EpicId = 2,
                            Name = "Step 4"
                        },
                        new
                        {
                            Id = 5,
                            EpicId = 3,
                            Name = "Step 5"
                        },
                        new
                        {
                            Id = 6,
                            EpicId = 3,
                            Name = "Step 6"
                        },
                        new
                        {
                            Id = 7,
                            EpicId = 3,
                            Name = "Step 7"
                        },
                        new
                        {
                            Id = 8,
                            EpicId = 4,
                            Name = "Step 8"
                        },
                        new
                        {
                            Id = 9,
                            EpicId = 4,
                            Name = "Step 9"
                        });
                });

            modelBuilder.Entity("StoriesTrelloExtension.Data.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("ReleaseId");

                    b.Property<int?>("StepId");

                    b.HasKey("Id");

                    b.HasIndex("ReleaseId");

                    b.HasIndex("StepId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Task 1",
                            ReleaseId = 1,
                            StepId = 5
                        },
                        new
                        {
                            Id = 2,
                            Name = "Task 2",
                            ReleaseId = 2,
                            StepId = 5
                        },
                        new
                        {
                            Id = 3,
                            Name = "Task 3",
                            ReleaseId = 2,
                            StepId = 4
                        },
                        new
                        {
                            Id = 4,
                            Name = "Task 4",
                            ReleaseId = 2,
                            StepId = 7
                        },
                        new
                        {
                            Id = 5,
                            Name = "Task 5",
                            ReleaseId = 1,
                            StepId = 4
                        },
                        new
                        {
                            Id = 6,
                            Name = "Task 6",
                            ReleaseId = 1,
                            StepId = 5
                        },
                        new
                        {
                            Id = 7,
                            Name = "Task 7",
                            ReleaseId = 2,
                            StepId = 6
                        },
                        new
                        {
                            Id = 8,
                            Name = "Task 8",
                            ReleaseId = 1,
                            StepId = 2
                        },
                        new
                        {
                            Id = 9,
                            Name = "Task 9",
                            ReleaseId = 1,
                            StepId = 8
                        },
                        new
                        {
                            Id = 10,
                            Name = "Task 10",
                            ReleaseId = 1,
                            StepId = 8
                        },
                        new
                        {
                            Id = 11,
                            Name = "Task 11",
                            ReleaseId = 2,
                            StepId = 6
                        },
                        new
                        {
                            Id = 12,
                            Name = "Task 12",
                            ReleaseId = 2,
                            StepId = 4
                        },
                        new
                        {
                            Id = 13,
                            Name = "Task 13",
                            ReleaseId = 2,
                            StepId = 5
                        },
                        new
                        {
                            Id = 14,
                            Name = "Task 14",
                            ReleaseId = 2,
                            StepId = 4
                        },
                        new
                        {
                            Id = 15,
                            Name = "Task 15",
                            ReleaseId = 2,
                            StepId = 7
                        },
                        new
                        {
                            Id = 16,
                            Name = "Task 16",
                            ReleaseId = 1,
                            StepId = 5
                        },
                        new
                        {
                            Id = 17,
                            Name = "Task 17",
                            ReleaseId = 1,
                            StepId = 6
                        },
                        new
                        {
                            Id = 18,
                            Name = "Task 18",
                            ReleaseId = 1,
                            StepId = 3
                        });
                });

            modelBuilder.Entity("StoriesTrelloExtension.Data.Models.Step", b =>
                {
                    b.HasOne("StoriesTrelloExtension.Data.Models.Epic", "Epic")
                        .WithMany("Steps")
                        .HasForeignKey("EpicId");
                });

            modelBuilder.Entity("StoriesTrelloExtension.Data.Models.Task", b =>
                {
                    b.HasOne("StoriesTrelloExtension.Data.Models.Release", "Release")
                        .WithMany("Tasks")
                        .HasForeignKey("ReleaseId");

                    b.HasOne("StoriesTrelloExtension.Data.Models.Step", "Step")
                        .WithMany("Tasks")
                        .HasForeignKey("StepId");
                });
#pragma warning restore 612, 618
        }
    }
}
